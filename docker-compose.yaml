services:
  # PostgreSQL database
  db:
    image: postgres:alpine
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${MUZIK_DB_USER:-postgres} -d ${MUZIK_DB_NAME:-postgres}",
        ]
      start_period: 10s
      start_interval: 1s
    environment:
      POSTGRES_DB: ${MUZIK_DB_NAME:-postgres}
      POSTGRES_USER: ${MUZIK_DB_USER:-postgres}
      POSTGRES_PASSWORD: $MUZIK_DB_PASSWORD

  # Backend API server
  api:
    restart: always
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    environment:
      - "MUZIK_DB_ADDR=db:5432"
      - MUZIK_DB_NAME
      - MUZIK_DB_USER
      - MUZIK_DB_PASSWORD
    depends_on:
      db:
        condition: service_healthy

  # Frontend HTTP web server
  web:
    restart: always
    build:
      context: .
      dockerfile: cmd/web/Dockerfile
    depends_on:
      - api

  # Use nginx as a reverse proxy
  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - web
      - api
    ports:
      - "127.0.0.1:8080:80"
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf

configs:
  nginx_config:
    file: configs/nginx.conf
